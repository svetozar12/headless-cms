datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["extendedWhereUnique"]
}

model User {
  id           Int            @id @default(autoincrement())
  username     String
  avatar       String
  password     String
  ContentModel ContentModel[]
  Content      Content[]
}

model ContentModel {
  id      Int         @id @default(autoincrement())
  title   String
  userId  Int
  user    User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  Content Content[]
  FIeld   FieldType[]
}

model Content {
  id             Int          @id @default(autoincrement())
  userId         Int
  title          String
  contentModelId Int
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  contentModel   ContentModel @relation(fields: [contentModelId], references: [id], onDelete: Cascade)
  FIeld          FIeld[]
}

model FIeld {
  id          Int        @id @default(autoincrement())
  contentId   Int?
  fieldTypeId Int
  title       String
  value       String?
  content     Content?   @relation(fields: [contentId], references: [id], onDelete: Cascade)
  fieldType   FieldType? @relation(fields: [fieldTypeId], references: [id], onDelete: Cascade)
}

model FieldType {
  id             Int           @id @default(autoincrement())
  contentModelId Int
  title          String
  type           FieldTypeEnum
  contentModel   ContentModel  @relation(fields: [contentModelId], references: [id], onDelete: Cascade)
  FIeld          FIeld[]
}

enum FieldTypeEnum {
  text
  json
  number
}
